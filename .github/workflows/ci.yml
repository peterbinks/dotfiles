name: CI

on:
  push:
  workflow_dispatch:

jobs:
  lint-ruby:
    runs-on: ubuntu-latest
    name: Lint Ruby
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Install Gems
        run: |
          bundle config set --local rubygems.pkg.github.com kinrobot:${{ secrets.KINROBOT_PACKAGES_READ_PAT }}
          bundle install --jobs 4 --retry 3 --without production

      - name: Lint
        run: bundle exec standardrb

  test-ruby:
    runs-on: ubuntu-latest
    needs: lint-ruby
    name: Test Ruby
    services:
      postgres:
        image: postgis/postgis:16-3.4-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: auto_test
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Install Gems
        run: |
          bundle config set --local rubygems.pkg.github.com kinrobot:${{ secrets.KINROBOT_PACKAGES_READ_PAT }}
          bundle install --jobs 4 --retry 3 --without production

      - name: Run Tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
          RAILS_ENV: test
        run: |
          bin/rails db:test:prepare --trace
          bundle exec rspec --tag ~contract
  
  lint-js:
    runs-on: ubuntu-latest
    name: Lint JS
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@kin'

      - name: Install Dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.KINROBOT_PACKAGES_READ_PAT }}

      - name: Lint
        run: npm run lint:js

  test-js:
    runs-on: ubuntu-latest
    needs: lint-js
    name: Test JS
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@kin'
      - name: Install Playwright Dependencies
        run: npx --yes playwright install-deps
      - name: Install Playwright
        run: npx playwright install
      - name: Install Dependencies
        run: |
          npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.KINROBOT_PACKAGES_READ_PAT }}
      - name: NPM Rebuild
        run: npm rebuild && npm run prepare --if-present
      - name: Run Tests
        run: npm run test

  lint-css:
    runs-on: ubuntu-latest
    name: Lint CSS
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@kin'

      - name: Install Dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.KINROBOT_PACKAGES_READ_PAT }}

      - name: Lint
        run: npm run lint:css
